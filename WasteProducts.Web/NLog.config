<?xml version="1.0" encoding="utf-8" ?>
<nlog xmlns="http://www.nlog-project.org/schemas/NLog.xsd"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      xsi:schemaLocation="http://www.nlog-project.org/schemas/NLog.xsd NLog.xsd"
      autoReload="true" throwExceptions="true">

  <extensions> 
    <add assembly="WasteProducts.Web"/> 
  </extensions> 

  <!-- Base variables -->
  <variable name="logsDirectory" value="${basedir}/App_Data/Log" />
  <variable name="logFileName" value="${logsDirectory}/${shortdate}.log" />
  <variable name="fatalLogFileName" value="${logsDirectory}/Fatal_${shortdate}.log" />
  <!-- Layout variables -->
  <variable name="requestUrl" value="${aspnet-Request-IP}->[${aspnet-request-method}]${aspnet-request-url:IncludePort=true:IncludeQueryString=true:IncludeScheme=true}" />
  <variable name="messageDate" value="${date:universalTime=true:format=HH\:mm\:ss.fff}" />
  <variable name="messageHeader" value="${messageDate} ${requestUrl} |${when:when=length('${aspnet-User-Identity}')>0:inner=${aspnet-User-Identity}:else=anonymous}|${logger:shortName=true}| [${uppercase:${level}}]" />
  <!-- Layout messages -->
  <variable name="messageLayout" value="${messageHeader} ${message}" />
  <variable name="errorMessageLayout" value="${messageHeader} ${message}: ${exception:format=ToString}" />
  <variable name="fatalMessageLayout" value="${messageHeader} ${message}: ${exception:format=Type,Message,Data:innerFormat=toString,Data:maxInnerExceptionLevel=10:exceptionDataSeparator=\r\n}" />

  <!-- Sync targets -->
  <targets>
    <target name="toConsole" xsi:type="ColoredConsole"  layout="${var:messageLayout}" />
  </targets>

  <targets>
    <default-target-parameters xsi:type="File" createDirs="true"/>
    <target name="toFile" xsi:type="File" fileName="${var:logFileName}" concurrentWrites="true" layout="${var:messageLayout}" />
    <target name="toErrorFile" xsi:type="File" fileName="${var:logFileName}" concurrentWrites="true" layout="${var:errorMessageLayout}" />
    <target name="toFatalFile" xsi:type="File" fileName="${var:fatalLogFileName}" deleteOldFileOnStartup="true">
      <layout xsi:type="LayoutWithHeaderAndFooter" header="${var:messageHeader}" layout="${var:fatalMessageLayout}"/>
    </target>
  </targets>

  <!-- Async targets with retrying -->
  <targets async="true">
    <default-wrapper xsi:type="RetryingWrapper"/>
    <target name="toRemoteConsole" xsi:type="NLogViewer" address="udp://127.0.0.1:7071" />
  </targets>

  <!-- HttpRequest buffer target with error filter-->
  <targets>
    <default-wrapper xsi:type="AspNetBufferingWrapper">
      <wrapper-target xsi:type="SingleEventAsArray"/>
    </default-wrapper>
    <target name="allOutputs" xsi:type="PostFilteringWrapper" defaultFilter="level >= LogLevel.Info">
      <target xsi:type="SplitGroup">
        <target-ref name="toConsole" />
        <target-ref name="toRemoteConsole" />

        <target xsi:type="FilteringWrapper" condition="level&lt;LogLevel.Error">
          <target-ref name="toFile" />
        </target>
        <target xsi:type="FilteringWrapper" condition="level==LogLevel.Error">
          <target-ref name="toErrorFile" />
        </target>
        <target xsi:type="FilteringWrapper" condition="level==LogLevel.Fatal">
          <target-ref name="toFatalFile" />
        </target>
      </target>
      <!--if there is at least one error, log everything from trace level-->
      <when exists="level >= LogLevel.Error" filter="level >= LogLevel.Trace" />
    </target>
  </targets>

  <rules>
    <logger name="*" writeTo="allOutputs"/>
  </rules>

</nlog>
